/**
 * This file is generated by MetTeL v2
 * which is designed and implemented
 * by Dmitry Tishkovsky.
 */
package Lukavron.language.Lukavron;

import java.util.Comparator;

public class LukavronLPOComparator implements Comparator<LukavronAbstractExpression>{

    public int compare(LukavronAbstractExpression e0, LukavronAbstractExpression e1){
        if(e0 == e1){ return 0; }
        final int CMP_SORTS = e0.sortId() - e1.sortId();
        if(CMP_SORTS != 0) {return CMP_SORTS;}
        if(e0 instanceof LukavronAbstractVariable){
            if(e1 instanceof LukavronAbstractVariable){ return e0.id() - e1.id(); }
            return -1;
        }else{
            if(e1 instanceof LukavronAbstractVariable){ return 1; }
        }
        final int PRE0 = e0.compareArgumentsTo(e1,this);
        if(PRE0 != 0){return PRE0;}
        if(e0.priority() < e1.priority()){return -1;}
        final int PRE1 = e1.compareArgumentsTo(e0,this);
        if(PRE1 != 0){return -PRE1;}
        if(e1.priority() < e0.priority()){return 1;}
        return e0.compareArguments(e1,this);
    }

}
