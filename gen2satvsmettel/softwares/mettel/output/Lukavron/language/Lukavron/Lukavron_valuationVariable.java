/**
 * This file is generated by MetTeL v2
 * which is designed and implemented
 * by Dmitry Tishkovsky.
 */
package Lukavron.language.Lukavron;

import java.util.Comparator;

import mettel.core.tableau.MettelExpression;

public class Lukavron_valuationVariable extends LukavronAbstractVariable implements Lukavron_valuation{

    public Lukavron_valuationVariable(String name, LukavronObjectFactory factory) {
        super(name, factory);
    }

    int sortId(){ return SORTID; }

    public LukavronSubstitution match(LukavronExpression e){
        LukavronSubstitution s = new LukavronTreeSubstitution();
        if(match(e,s)){
            return factory.getSubstitution(s);
        }else{ return null; }
    }

    public boolean match(LukavronExpression e, LukavronSubstitution s){
        if(!(e instanceof Lukavron_valuation)){ return false; }
        return s.append(this,(Lukavron_valuation)e);
    }

    public LukavronExpression rewrite(LukavronReplacement r) {
        Lukavron_valuation e = r.get_valuation(this);
        return (e == null) ? this : e;
    }

    public LukavronExpression substitute(LukavronSubstitution s) {
        Lukavron_valuation e = s.get_valuation(this);
        return (e == null) ? this : e;
    }

    private int hashCode = 0;
    public int hashCode(){
        if(hashCode == 0){
            hashCode = 23*SORTID + name.hashCode();
        }
        return hashCode;
    }

    public int compareTo(MettelExpression e){
        if(e instanceof Lukavron_valuationVariable) return name.compareTo(((Lukavron_valuationVariable)e).name());
        if(e instanceof Lukavron_valuation) return -1;
        return SORTID - ((LukavronAbstractExpression)e).sortId();
    }

    int compareArgumentsTo(LukavronAbstractExpression e, Comparator<LukavronAbstractExpression> c){return 0;}
    int compareArguments(LukavronAbstractExpression e, Comparator<LukavronAbstractExpression> c){return 0;}

    public boolean equals(Object o){
        if(o == this){ return true; }
        if(!(o instanceof Lukavron_valuationVariable)){ return false; }
        return name.equals(((Lukavron_valuationVariable)o).name());
    }

    public boolean isEquality(){
        return false;
    }
    public int length(){
        return 1;
    }
}
