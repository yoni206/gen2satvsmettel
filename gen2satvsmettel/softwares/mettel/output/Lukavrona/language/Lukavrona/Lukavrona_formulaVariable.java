/**
 * This file is generated by MetTeL v2
 * which is designed and implemented
 * by Dmitry Tishkovsky.
 */
package Lukavrona.language.Lukavrona;

import java.util.Comparator;

import mettel.core.tableau.MettelExpression;

public class Lukavrona_formulaVariable extends LukavronaAbstractVariable implements Lukavrona_formula{

    public Lukavrona_formulaVariable(String name, LukavronaObjectFactory factory) {
        super(name, factory);
    }

    int sortId(){ return SORTID; }

    public LukavronaSubstitution match(LukavronaExpression e){
        LukavronaSubstitution s = new LukavronaTreeSubstitution();
        if(match(e,s)){
            return factory.getSubstitution(s);
        }else{ return null; }
    }

    public boolean match(LukavronaExpression e, LukavronaSubstitution s){
        if(!(e instanceof Lukavrona_formula)){ return false; }
        return s.append(this,(Lukavrona_formula)e);
    }

    public LukavronaExpression rewrite(LukavronaReplacement r) {
        Lukavrona_formula e = r.get_formula(this);
        return (e == null) ? this : e;
    }

    public LukavronaExpression substitute(LukavronaSubstitution s) {
        Lukavrona_formula e = s.get_formula(this);
        return (e == null) ? this : e;
    }

    private int hashCode = 0;
    public int hashCode(){
        if(hashCode == 0){
            hashCode = 23*SORTID + name.hashCode();
        }
        return hashCode;
    }

    public int compareTo(MettelExpression e){
        if(e instanceof Lukavrona_formulaVariable) return name.compareTo(((Lukavrona_formulaVariable)e).name());
        if(e instanceof Lukavrona_formula) return -1;
        return SORTID - ((LukavronaAbstractExpression)e).sortId();
    }

    int compareArgumentsTo(LukavronaAbstractExpression e, Comparator<LukavronaAbstractExpression> c){return 0;}
    int compareArguments(LukavronaAbstractExpression e, Comparator<LukavronaAbstractExpression> c){return 0;}

    public boolean equals(Object o){
        if(o == this){ return true; }
        if(!(o instanceof Lukavrona_formulaVariable)){ return false; }
        return name.equals(((Lukavrona_formulaVariable)o).name());
    }

    public boolean isEquality(){
        return false;
    }
    public int length(){
        return 1;
    }
}
