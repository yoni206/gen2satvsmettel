// $ANTLR 3.4 output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g 2018-09-13 15:19:55

package Lukasiewicz.language.Lukasiewicz;

import java.util.Collection;
import java.util.ArrayList;
import java.util.LinkedHashSet;

import mettel.core.tableau.MettelGeneralTableauRule;
import mettel.core.language.MettelAbstractLogicParser;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

/**
 * This file is generated by MetTeL v2
 * which is designed and implemented
 * by Dmitry Tishkovsky.
 */
@SuppressWarnings({"all", "warnings", "unchecked"})
public class LukasiewiczParser extends MettelAbstractLogicParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "COMMENT", "ID", "ID_DIGIT", "INT", "LETTER", "WS", "'!'", "'$;'", "'$|'", "'&'", "'('", "')'", "'->'", "'/'", "'F'", "'T'", "'U'", "'priority'", "'|'"
    };

    public static final int EOF=-1;
    public static final int T__10=10;
    public static final int T__11=11;
    public static final int T__12=12;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int COMMENT=4;
    public static final int ID=5;
    public static final int ID_DIGIT=6;
    public static final int INT=7;
    public static final int LETTER=8;
    public static final int WS=9;

    // delegates
    public MettelAbstractLogicParser[] getDelegates() {
        return new MettelAbstractLogicParser[] {};
    }

    // delegators


    public LukasiewiczParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public LukasiewiczParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

    public String[] getTokenNames() { return LukasiewiczParser.tokenNames; }
    public String getGrammarFileName() { return "output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g"; }


    public Object recoverFromMismatchedToken(IntStream input, int ttype, BitSet follow)
           throws RecognitionException{
        MismatchedTokenException e = new MismatchedTokenException(ttype, input);
        reportError(e);
        throw e;
    }
    private LukasiewiczObjectFactory factory = LukasiewiczObjectFactory.DEFAULT;
    public LukasiewiczParser(TokenStream input, LukasiewiczObjectFactory factory){
        this(input);
        this.factory = factory;
    }
    public LukasiewiczParser(TokenStream input, RecognizerSharedState state, LukasiewiczObjectFactory factory){
        this(input,state);
        this.factory = factory;
    }



    // $ANTLR start "valuations"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:49:1: valuations[Collection<Lukasiewicz_valuation> a0] : ( ( (e0= valuation )* ) ( EOF ) ) ;
    public final void valuations(Collection<Lukasiewicz_valuation> a0) throws RecognitionException {
        Lukasiewicz_valuation e0 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:51:2: ( ( ( (e0= valuation )* ) ( EOF ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:52:2: ( ( (e0= valuation )* ) ( EOF ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:52:2: ( ( (e0= valuation )* ) ( EOF ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:53:2: ( (e0= valuation )* ) ( EOF )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:53:2: ( (e0= valuation )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:54:3: (e0= valuation )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:54:3: (e0= valuation )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==ID||LA1_0==14||(LA1_0 >= 18 && LA1_0 <= 20)) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:54:4: e0= valuation
            	    {
            	    pushFollow(FOLLOW_valuation_in_valuations72);
            	    e0=valuation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    if ( state.backtracking==0 ) {
            	       a0.add(e0);
            	       }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:61:2: ( EOF )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:61:3: EOF
            {
            match(input,EOF,FOLLOW_EOF_in_valuations90); if (state.failed) return ;

            }


            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "valuations"



    // $ANTLR start "valuationVariable"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:64:1: valuationVariable returns [Lukasiewicz_valuation r0] : (t= ID ) ;
    public final Lukasiewicz_valuation valuationVariable() throws RecognitionException {
        Lukasiewicz_valuation r0 = null;


        Token t=null;

        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:69:2: ( (t= ID ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:70:2: (t= ID )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:70:2: (t= ID )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:70:2: t= ID
            {
            t=(Token)match(input,ID,FOLLOW_ID_in_valuationVariable114); if (state.failed) return r0;

            }


            }

            if ( state.backtracking==0 ) {
            r0 = factory.create_valuationVariable(t.getText());
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "valuationVariable"



    // $ANTLR start "basic_valuation"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:72:1: basic_valuation returns [Lukasiewicz_valuation r0] : ( (e0= valuationVariable ) | ( ( '(' ) (e0= valuation ) ( ')' ) ) ) ;
    public final Lukasiewicz_valuation basic_valuation() throws RecognitionException {
        Lukasiewicz_valuation r0 = null;


        Lukasiewicz_valuation e0 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:77:2: ( ( (e0= valuationVariable ) | ( ( '(' ) (e0= valuation ) ( ')' ) ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:78:2: ( (e0= valuationVariable ) | ( ( '(' ) (e0= valuation ) ( ')' ) ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:78:2: ( (e0= valuationVariable ) | ( ( '(' ) (e0= valuation ) ( ')' ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==ID) ) {
                alt2=1;
            }
            else if ( (LA2_0==14) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;

            }
            switch (alt2) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:79:2: (e0= valuationVariable )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:79:2: (e0= valuationVariable )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:79:3: e0= valuationVariable
                    {
                    pushFollow(FOLLOW_valuationVariable_in_basic_valuation139);
                    e0=valuationVariable();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:81:2: ( ( '(' ) (e0= valuation ) ( ')' ) )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:81:2: ( ( '(' ) (e0= valuation ) ( ')' ) )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:82:3: ( '(' ) (e0= valuation ) ( ')' )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:82:3: ( '(' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:82:4: '('
                    {
                    match(input,14,FOLLOW_14_in_basic_valuation151); if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:83:3: (e0= valuation )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:83:4: e0= valuation
                    {
                    pushFollow(FOLLOW_valuation_in_basic_valuation161);
                    e0=valuation();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:84:3: ( ')' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:84:4: ')'
                    {
                    match(input,15,FOLLOW_15_in_basic_valuation167); if (state.failed) return r0;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
            r0 = e0;
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "basic_valuation"



    // $ANTLR start "valuation_true"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:88:1: valuation_true returns [Lukasiewicz_valuation r0] : ( (e00= basic_valuation ) | ( ( 'T' ) (e10= formula ) ) ) ;
    public final Lukasiewicz_valuation valuation_true() throws RecognitionException {
        Lukasiewicz_valuation r0 = null;


        Lukasiewicz_valuation e00 =null;

        Lukasiewicz_formula e10 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:90:2: ( ( (e00= basic_valuation ) | ( ( 'T' ) (e10= formula ) ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:91:2: ( (e00= basic_valuation ) | ( ( 'T' ) (e10= formula ) ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:91:2: ( (e00= basic_valuation ) | ( ( 'T' ) (e10= formula ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==ID||LA3_0==14) ) {
                alt3=1;
            }
            else if ( (LA3_0==19) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:92:2: (e00= basic_valuation )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:92:2: (e00= basic_valuation )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:92:3: e00= basic_valuation
                    {
                    pushFollow(FOLLOW_basic_valuation_in_valuation_true193);
                    e00=basic_valuation();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = e00;
                      }

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:99:2: ( ( 'T' ) (e10= formula ) )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:99:2: ( ( 'T' ) (e10= formula ) )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:100:3: ( 'T' ) (e10= formula )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:100:3: ( 'T' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:100:4: 'T'
                    {
                    match(input,19,FOLLOW_19_in_valuation_true212); if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:101:3: (e10= formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:101:4: e10= formula
                    {
                    pushFollow(FOLLOW_formula_in_valuation_true222);
                    e10=formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    if ( state.backtracking==0 ) {
                      r0 = factory.create_true_valuation(e10);
                      }

                    }


                    }
                    break;

            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "valuation_true"



    // $ANTLR start "valuation_unknown"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:110:1: valuation_unknown returns [Lukasiewicz_valuation r0] : ( (e00= valuation_true ) | ( ( 'U' ) (e10= formula ) ) ) ;
    public final Lukasiewicz_valuation valuation_unknown() throws RecognitionException {
        Lukasiewicz_valuation r0 = null;


        Lukasiewicz_valuation e00 =null;

        Lukasiewicz_formula e10 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:112:2: ( ( (e00= valuation_true ) | ( ( 'U' ) (e10= formula ) ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:113:2: ( (e00= valuation_true ) | ( ( 'U' ) (e10= formula ) ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:113:2: ( (e00= valuation_true ) | ( ( 'U' ) (e10= formula ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==ID||LA4_0==14||LA4_0==19) ) {
                alt4=1;
            }
            else if ( (LA4_0==20) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;

            }
            switch (alt4) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:114:2: (e00= valuation_true )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:114:2: (e00= valuation_true )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:114:3: e00= valuation_true
                    {
                    pushFollow(FOLLOW_valuation_true_in_valuation_unknown255);
                    e00=valuation_true();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = e00;
                      }

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:121:2: ( ( 'U' ) (e10= formula ) )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:121:2: ( ( 'U' ) (e10= formula ) )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:122:3: ( 'U' ) (e10= formula )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:122:3: ( 'U' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:122:4: 'U'
                    {
                    match(input,20,FOLLOW_20_in_valuation_unknown274); if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:123:3: (e10= formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:123:4: e10= formula
                    {
                    pushFollow(FOLLOW_formula_in_valuation_unknown284);
                    e10=formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    if ( state.backtracking==0 ) {
                      r0 = factory.create_unknown_valuation(e10);
                      }

                    }


                    }
                    break;

            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "valuation_unknown"



    // $ANTLR start "valuation_false"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:132:1: valuation_false returns [Lukasiewicz_valuation r0] : ( (e00= valuation_unknown ) | ( ( 'F' ) (e10= formula ) ) ) ;
    public final Lukasiewicz_valuation valuation_false() throws RecognitionException {
        Lukasiewicz_valuation r0 = null;


        Lukasiewicz_valuation e00 =null;

        Lukasiewicz_formula e10 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:134:2: ( ( (e00= valuation_unknown ) | ( ( 'F' ) (e10= formula ) ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:135:2: ( (e00= valuation_unknown ) | ( ( 'F' ) (e10= formula ) ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:135:2: ( (e00= valuation_unknown ) | ( ( 'F' ) (e10= formula ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==ID||LA5_0==14||(LA5_0 >= 19 && LA5_0 <= 20)) ) {
                alt5=1;
            }
            else if ( (LA5_0==18) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }
            switch (alt5) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:136:2: (e00= valuation_unknown )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:136:2: (e00= valuation_unknown )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:136:3: e00= valuation_unknown
                    {
                    pushFollow(FOLLOW_valuation_unknown_in_valuation_false317);
                    e00=valuation_unknown();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = e00;
                      }

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:143:2: ( ( 'F' ) (e10= formula ) )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:143:2: ( ( 'F' ) (e10= formula ) )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:144:3: ( 'F' ) (e10= formula )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:144:3: ( 'F' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:144:4: 'F'
                    {
                    match(input,18,FOLLOW_18_in_valuation_false336); if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:145:3: (e10= formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:145:4: e10= formula
                    {
                    pushFollow(FOLLOW_formula_in_valuation_false346);
                    e10=formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    if ( state.backtracking==0 ) {
                      r0 = factory.create_false_valuation(e10);
                      }

                    }


                    }
                    break;

            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "valuation_false"



    // $ANTLR start "valuation"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:154:1: valuation returns [Lukasiewicz_valuation r0] : (e0= valuation_false ) ;
    public final Lukasiewicz_valuation valuation() throws RecognitionException {
        Lukasiewicz_valuation r0 = null;


        Lukasiewicz_valuation e0 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:159:2: ( (e0= valuation_false ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:160:2: (e0= valuation_false )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:160:2: (e0= valuation_false )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:160:2: e0= valuation_false
            {
            pushFollow(FOLLOW_valuation_false_in_valuation380);
            e0=valuation_false();

            state._fsp--;
            if (state.failed) return r0;

            }


            }

            if ( state.backtracking==0 ) {
            r0 = e0;
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "valuation"



    // $ANTLR start "formulas"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:162:1: formulas[Collection<Lukasiewicz_formula> a0] : ( ( (e0= formula )* ) ( EOF ) ) ;
    public final void formulas(Collection<Lukasiewicz_formula> a0) throws RecognitionException {
        Lukasiewicz_formula e0 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:164:2: ( ( ( (e0= formula )* ) ( EOF ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:165:2: ( ( (e0= formula )* ) ( EOF ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:165:2: ( ( (e0= formula )* ) ( EOF ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:166:2: ( (e0= formula )* ) ( EOF )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:166:2: ( (e0= formula )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:167:3: (e0= formula )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:167:3: (e0= formula )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==ID||LA6_0==10||LA6_0==14) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:167:4: e0= formula
            	    {
            	    pushFollow(FOLLOW_formula_in_formulas403);
            	    e0=formula();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    if ( state.backtracking==0 ) {
            	       a0.add(e0);
            	       }

            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:174:2: ( EOF )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:174:3: EOF
            {
            match(input,EOF,FOLLOW_EOF_in_formulas421); if (state.failed) return ;

            }


            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "formulas"



    // $ANTLR start "formulaVariable"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:177:1: formulaVariable returns [Lukasiewicz_formula r0] : (t= ID ) ;
    public final Lukasiewicz_formula formulaVariable() throws RecognitionException {
        Lukasiewicz_formula r0 = null;


        Token t=null;

        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:182:2: ( (t= ID ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:183:2: (t= ID )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:183:2: (t= ID )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:183:2: t= ID
            {
            t=(Token)match(input,ID,FOLLOW_ID_in_formulaVariable445); if (state.failed) return r0;

            }


            }

            if ( state.backtracking==0 ) {
            r0 = factory.create_formulaVariable(t.getText());
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "formulaVariable"



    // $ANTLR start "basic_formula"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:185:1: basic_formula returns [Lukasiewicz_formula r0] : ( (e0= formulaVariable ) | ( ( '(' ) (e0= formula ) ( ')' ) ) ) ;
    public final Lukasiewicz_formula basic_formula() throws RecognitionException {
        Lukasiewicz_formula r0 = null;


        Lukasiewicz_formula e0 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:190:2: ( ( (e0= formulaVariable ) | ( ( '(' ) (e0= formula ) ( ')' ) ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:191:2: ( (e0= formulaVariable ) | ( ( '(' ) (e0= formula ) ( ')' ) ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:191:2: ( (e0= formulaVariable ) | ( ( '(' ) (e0= formula ) ( ')' ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==ID) ) {
                alt7=1;
            }
            else if ( (LA7_0==14) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }
            switch (alt7) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:192:2: (e0= formulaVariable )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:192:2: (e0= formulaVariable )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:192:3: e0= formulaVariable
                    {
                    pushFollow(FOLLOW_formulaVariable_in_basic_formula470);
                    e0=formulaVariable();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:194:2: ( ( '(' ) (e0= formula ) ( ')' ) )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:194:2: ( ( '(' ) (e0= formula ) ( ')' ) )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:195:3: ( '(' ) (e0= formula ) ( ')' )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:195:3: ( '(' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:195:4: '('
                    {
                    match(input,14,FOLLOW_14_in_basic_formula482); if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:196:3: (e0= formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:196:4: e0= formula
                    {
                    pushFollow(FOLLOW_formula_in_basic_formula492);
                    e0=formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:197:3: ( ')' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:197:4: ')'
                    {
                    match(input,15,FOLLOW_15_in_basic_formula498); if (state.failed) return r0;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
            r0 = e0;
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "basic_formula"



    // $ANTLR start "formula_negation"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:201:1: formula_negation returns [Lukasiewicz_formula r0] : ( (e00= basic_formula ) | ( ( '!' ) (e10= basic_formula ) ) ) ;
    public final Lukasiewicz_formula formula_negation() throws RecognitionException {
        Lukasiewicz_formula r0 = null;


        Lukasiewicz_formula e00 =null;

        Lukasiewicz_formula e10 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:203:2: ( ( (e00= basic_formula ) | ( ( '!' ) (e10= basic_formula ) ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:204:2: ( (e00= basic_formula ) | ( ( '!' ) (e10= basic_formula ) ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:204:2: ( (e00= basic_formula ) | ( ( '!' ) (e10= basic_formula ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==ID||LA8_0==14) ) {
                alt8=1;
            }
            else if ( (LA8_0==10) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;

            }
            switch (alt8) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:205:2: (e00= basic_formula )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:205:2: (e00= basic_formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:205:3: e00= basic_formula
                    {
                    pushFollow(FOLLOW_basic_formula_in_formula_negation524);
                    e00=basic_formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = e00;
                      }

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:212:2: ( ( '!' ) (e10= basic_formula ) )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:212:2: ( ( '!' ) (e10= basic_formula ) )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:213:3: ( '!' ) (e10= basic_formula )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:213:3: ( '!' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:213:4: '!'
                    {
                    match(input,10,FOLLOW_10_in_formula_negation543); if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:214:3: (e10= basic_formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:214:4: e10= basic_formula
                    {
                    pushFollow(FOLLOW_basic_formula_in_formula_negation553);
                    e10=basic_formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    }


                    if ( state.backtracking==0 ) {
                      r0 = factory.create_negation_formula(e10);
                      }

                    }


                    }
                    break;

            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "formula_negation"



    // $ANTLR start "formula_conjunction"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:223:1: formula_conjunction returns [Lukasiewicz_formula r0] : ( (e0= formula_negation ) ( ( ( '&' ) (e1= formula_negation ) )* ) ) ;
    public final Lukasiewicz_formula formula_conjunction() throws RecognitionException {
        Lukasiewicz_formula r0 = null;


        Lukasiewicz_formula e0 =null;

        Lukasiewicz_formula e1 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:228:2: ( ( (e0= formula_negation ) ( ( ( '&' ) (e1= formula_negation ) )* ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:229:2: ( (e0= formula_negation ) ( ( ( '&' ) (e1= formula_negation ) )* ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:229:2: ( (e0= formula_negation ) ( ( ( '&' ) (e1= formula_negation ) )* ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:230:2: (e0= formula_negation ) ( ( ( '&' ) (e1= formula_negation ) )* )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:230:2: (e0= formula_negation )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:230:3: e0= formula_negation
            {
            pushFollow(FOLLOW_formula_negation_in_formula_conjunction590);
            e0=formula_negation();

            state._fsp--;
            if (state.failed) return r0;

            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:231:2: ( ( ( '&' ) (e1= formula_negation ) )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:232:3: ( ( '&' ) (e1= formula_negation ) )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:232:3: ( ( '&' ) (e1= formula_negation ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==13) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:233:4: ( '&' ) (e1= formula_negation )
            	    {
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:233:4: ( '&' )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:233:5: '&'
            	    {
            	    match(input,13,FOLLOW_13_in_formula_conjunction604); if (state.failed) return r0;

            	    }


            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:234:4: (e1= formula_negation )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:234:5: e1= formula_negation
            	    {
            	    pushFollow(FOLLOW_formula_negation_in_formula_conjunction615);
            	    e1=formula_negation();

            	    state._fsp--;
            	    if (state.failed) return r0;

            	    if ( state.backtracking==0 ) {
            	        e0 = factory.create_conjunction_formula(e0, e1);
            	        }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);


            }


            }


            }

            if ( state.backtracking==0 ) {
            r0 = e0;
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "formula_conjunction"



    // $ANTLR start "formula_disjunction"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:244:1: formula_disjunction returns [Lukasiewicz_formula r0] : ( (e0= formula_conjunction ) ( ( ( '|' ) (e1= formula_conjunction ) )* ) ) ;
    public final Lukasiewicz_formula formula_disjunction() throws RecognitionException {
        Lukasiewicz_formula r0 = null;


        Lukasiewicz_formula e0 =null;

        Lukasiewicz_formula e1 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:249:2: ( ( (e0= formula_conjunction ) ( ( ( '|' ) (e1= formula_conjunction ) )* ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:250:2: ( (e0= formula_conjunction ) ( ( ( '|' ) (e1= formula_conjunction ) )* ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:250:2: ( (e0= formula_conjunction ) ( ( ( '|' ) (e1= formula_conjunction ) )* ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:251:2: (e0= formula_conjunction ) ( ( ( '|' ) (e1= formula_conjunction ) )* )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:251:2: (e0= formula_conjunction )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:251:3: e0= formula_conjunction
            {
            pushFollow(FOLLOW_formula_conjunction_in_formula_disjunction661);
            e0=formula_conjunction();

            state._fsp--;
            if (state.failed) return r0;

            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:252:2: ( ( ( '|' ) (e1= formula_conjunction ) )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:253:3: ( ( '|' ) (e1= formula_conjunction ) )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:253:3: ( ( '|' ) (e1= formula_conjunction ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==22) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:254:4: ( '|' ) (e1= formula_conjunction )
            	    {
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:254:4: ( '|' )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:254:5: '|'
            	    {
            	    match(input,22,FOLLOW_22_in_formula_disjunction675); if (state.failed) return r0;

            	    }


            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:255:4: (e1= formula_conjunction )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:255:5: e1= formula_conjunction
            	    {
            	    pushFollow(FOLLOW_formula_conjunction_in_formula_disjunction686);
            	    e1=formula_conjunction();

            	    state._fsp--;
            	    if (state.failed) return r0;

            	    if ( state.backtracking==0 ) {
            	        e0 = factory.create_disjunction_formula(e0, e1);
            	        }

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);


            }


            }


            }

            if ( state.backtracking==0 ) {
            r0 = e0;
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "formula_disjunction"



    // $ANTLR start "formula_implication"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:265:1: formula_implication returns [Lukasiewicz_formula r0] : ( (e0= formula_disjunction ) ( ( ( '->' ) (e1= formula_disjunction ) )* ) ) ;
    public final Lukasiewicz_formula formula_implication() throws RecognitionException {
        Lukasiewicz_formula r0 = null;


        Lukasiewicz_formula e0 =null;

        Lukasiewicz_formula e1 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:270:2: ( ( (e0= formula_disjunction ) ( ( ( '->' ) (e1= formula_disjunction ) )* ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:271:2: ( (e0= formula_disjunction ) ( ( ( '->' ) (e1= formula_disjunction ) )* ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:271:2: ( (e0= formula_disjunction ) ( ( ( '->' ) (e1= formula_disjunction ) )* ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:272:2: (e0= formula_disjunction ) ( ( ( '->' ) (e1= formula_disjunction ) )* )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:272:2: (e0= formula_disjunction )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:272:3: e0= formula_disjunction
            {
            pushFollow(FOLLOW_formula_disjunction_in_formula_implication732);
            e0=formula_disjunction();

            state._fsp--;
            if (state.failed) return r0;

            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:273:2: ( ( ( '->' ) (e1= formula_disjunction ) )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:274:3: ( ( '->' ) (e1= formula_disjunction ) )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:274:3: ( ( '->' ) (e1= formula_disjunction ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==16) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:275:4: ( '->' ) (e1= formula_disjunction )
            	    {
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:275:4: ( '->' )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:275:5: '->'
            	    {
            	    match(input,16,FOLLOW_16_in_formula_implication746); if (state.failed) return r0;

            	    }


            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:276:4: (e1= formula_disjunction )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:276:5: e1= formula_disjunction
            	    {
            	    pushFollow(FOLLOW_formula_disjunction_in_formula_implication757);
            	    e1=formula_disjunction();

            	    state._fsp--;
            	    if (state.failed) return r0;

            	    if ( state.backtracking==0 ) {
            	        e0 = factory.create_implication_formula(e0, e1);
            	        }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);


            }


            }


            }

            if ( state.backtracking==0 ) {
            r0 = e0;
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "formula_implication"



    // $ANTLR start "formula"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:286:1: formula returns [Lukasiewicz_formula r0] : (e0= formula_implication ) ;
    public final Lukasiewicz_formula formula() throws RecognitionException {
        Lukasiewicz_formula r0 = null;


        Lukasiewicz_formula e0 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:291:2: ( (e0= formula_implication ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:292:2: (e0= formula_implication )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:292:2: (e0= formula_implication )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:292:2: e0= formula_implication
            {
            pushFollow(FOLLOW_formula_implication_in_formula800);
            e0=formula_implication();

            state._fsp--;
            if (state.failed) return r0;

            }


            }

            if ( state.backtracking==0 ) {
            r0 = e0;
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "formula"



    // $ANTLR start "expressions"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:294:1: expressions returns [ArrayList<LukasiewiczExpression> r0] : ( ( (e0= expression )* ) ) ;
    public final ArrayList<LukasiewiczExpression> expressions() throws RecognitionException {
        ArrayList<LukasiewiczExpression> r0 = null;


        LukasiewiczExpression e0 =null;



        r0 = new ArrayList<LukasiewiczExpression>();

        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:299:2: ( ( ( (e0= expression )* ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:300:2: ( ( (e0= expression )* ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:300:2: ( ( (e0= expression )* ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:300:2: ( (e0= expression )* )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:300:2: ( (e0= expression )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:301:3: (e0= expression )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:301:3: (e0= expression )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==ID||LA12_0==10||LA12_0==14||(LA12_0 >= 18 && LA12_0 <= 20)) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:301:4: e0= expression
            	    {
            	    pushFollow(FOLLOW_expression_in_expressions827);
            	    e0=expression();

            	    state._fsp--;
            	    if (state.failed) return r0;

            	    if ( state.backtracking==0 ) {
            	       r0.add(e0);
            	       }

            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);


            }


            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "expressions"



    // $ANTLR start "expression"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:309:1: expression returns [LukasiewiczExpression r0] : ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) ) ;
    public final LukasiewiczExpression expression() throws RecognitionException {
        LukasiewiczExpression r0 = null;


        Lukasiewicz_valuation valuationExpression =null;

        Lukasiewicz_formula formulaExpression =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:311:2: ( ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:312:2: ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:312:2: ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==ID) ) {
                int LA13_1 = input.LA(2);

                if ( (synpred1_Lukasiewicz()) ) {
                    alt13=1;
                }
                else if ( (synpred2_Lukasiewicz()) ) {
                    alt13=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return r0;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA13_0==14) ) {
                int LA13_2 = input.LA(2);

                if ( (synpred1_Lukasiewicz()) ) {
                    alt13=1;
                }
                else if ( (synpred2_Lukasiewicz()) ) {
                    alt13=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return r0;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA13_0==19) && (synpred1_Lukasiewicz())) {
                alt13=1;
            }
            else if ( (LA13_0==20) && (synpred1_Lukasiewicz())) {
                alt13=1;
            }
            else if ( (LA13_0==18) && (synpred1_Lukasiewicz())) {
                alt13=1;
            }
            else if ( (LA13_0==10) && (synpred2_Lukasiewicz())) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;

            }
            switch (alt13) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:313:2: ( ( valuation )=>valuationExpression= valuation )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:313:2: ( ( valuation )=>valuationExpression= valuation )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:313:3: ( valuation )=>valuationExpression= valuation
                    {
                    pushFollow(FOLLOW_valuation_in_expression867);
                    valuationExpression=valuation();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = valuationExpression;
                      }

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:320:2: ( ( formula )=>formulaExpression= formula )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:320:2: ( ( formula )=>formulaExpression= formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:320:3: ( formula )=>formulaExpression= formula
                    {
                    pushFollow(FOLLOW_formula_in_expression891);
                    formulaExpression=formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = formulaExpression;
                      }

                    }


                    }
                    break;

            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "expression"



    // $ANTLR start "expressionEOF"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:328:1: expressionEOF returns [LukasiewiczExpression r0] : ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) | ( EOF ) ) ;
    public final LukasiewiczExpression expressionEOF() throws RecognitionException {
        LukasiewiczExpression r0 = null;


        Lukasiewicz_valuation valuationExpression =null;

        Lukasiewicz_formula formulaExpression =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:330:2: ( ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) | ( EOF ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:331:2: ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) | ( EOF ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:331:2: ( ( ( valuation )=>valuationExpression= valuation ) | ( ( formula )=>formulaExpression= formula ) | ( EOF ) )
            int alt14=3;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==ID) ) {
                int LA14_1 = input.LA(2);

                if ( (synpred3_Lukasiewicz()) ) {
                    alt14=1;
                }
                else if ( (synpred4_Lukasiewicz()) ) {
                    alt14=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return r0;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA14_0==14) ) {
                int LA14_2 = input.LA(2);

                if ( (synpred3_Lukasiewicz()) ) {
                    alt14=1;
                }
                else if ( (synpred4_Lukasiewicz()) ) {
                    alt14=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return r0;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA14_0==19) && (synpred3_Lukasiewicz())) {
                alt14=1;
            }
            else if ( (LA14_0==20) && (synpred3_Lukasiewicz())) {
                alt14=1;
            }
            else if ( (LA14_0==18) && (synpred3_Lukasiewicz())) {
                alt14=1;
            }
            else if ( (LA14_0==10) && (synpred4_Lukasiewicz())) {
                alt14=2;
            }
            else if ( (LA14_0==EOF) ) {
                alt14=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return r0;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;

            }
            switch (alt14) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:332:2: ( ( valuation )=>valuationExpression= valuation )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:332:2: ( ( valuation )=>valuationExpression= valuation )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:332:3: ( valuation )=>valuationExpression= valuation
                    {
                    pushFollow(FOLLOW_valuation_in_expressionEOF926);
                    valuationExpression=valuation();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = valuationExpression;
                      }

                    }


                    }
                    break;
                case 2 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:339:2: ( ( formula )=>formulaExpression= formula )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:339:2: ( ( formula )=>formulaExpression= formula )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:339:3: ( formula )=>formulaExpression= formula
                    {
                    pushFollow(FOLLOW_formula_in_expressionEOF950);
                    formulaExpression=formula();

                    state._fsp--;
                    if (state.failed) return r0;

                    if ( state.backtracking==0 ) {
                      r0 = formulaExpression;
                      }

                    }


                    }
                    break;
                case 3 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:346:2: ( EOF )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:346:2: ( EOF )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:346:3: EOF
                    {
                    match(input,EOF,FOLLOW_EOF_in_expressionEOF965); if (state.failed) return r0;

                    }


                    }
                    break;

            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "expressionEOF"



    // $ANTLR start "tableauRule"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:349:1: tableauRule returns [MettelGeneralTableauRule r0] : ( (premises= expressions ) ( '/' ) (conclusion= expressions ) ( ( ( '$|' ) (conclusion= expressions ) )* ) ( ( ( 'priority' ) (t= INT ) )? ) ) ;
    public final MettelGeneralTableauRule tableauRule() throws RecognitionException {
        MettelGeneralTableauRule r0 = null;


        Token t=null;
        ArrayList<LukasiewiczExpression> premises =null;

        ArrayList<LukasiewiczExpression> conclusion =null;



        LinkedHashSet<LinkedHashSet<LukasiewiczExpression>> branches = new LinkedHashSet<LinkedHashSet<LukasiewiczExpression>>();
        int priority = 0;

        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:358:2: ( ( (premises= expressions ) ( '/' ) (conclusion= expressions ) ( ( ( '$|' ) (conclusion= expressions ) )* ) ( ( ( 'priority' ) (t= INT ) )? ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:359:2: ( (premises= expressions ) ( '/' ) (conclusion= expressions ) ( ( ( '$|' ) (conclusion= expressions ) )* ) ( ( ( 'priority' ) (t= INT ) )? ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:359:2: ( (premises= expressions ) ( '/' ) (conclusion= expressions ) ( ( ( '$|' ) (conclusion= expressions ) )* ) ( ( ( 'priority' ) (t= INT ) )? ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:360:2: (premises= expressions ) ( '/' ) (conclusion= expressions ) ( ( ( '$|' ) (conclusion= expressions ) )* ) ( ( ( 'priority' ) (t= INT ) )? )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:360:2: (premises= expressions )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:360:3: premises= expressions
            {
            pushFollow(FOLLOW_expressions_in_tableauRule996);
            premises=expressions();

            state._fsp--;
            if (state.failed) return r0;

            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:361:2: ( '/' )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:361:3: '/'
            {
            match(input,17,FOLLOW_17_in_tableauRule1001); if (state.failed) return r0;

            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:362:2: (conclusion= expressions )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:362:3: conclusion= expressions
            {
            pushFollow(FOLLOW_expressions_in_tableauRule1010);
            conclusion=expressions();

            state._fsp--;
            if (state.failed) return r0;

            if ( state.backtracking==0 ) {
              branches.add(new LinkedHashSet<LukasiewiczExpression>(conclusion));
              }

            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:368:2: ( ( ( '$|' ) (conclusion= expressions ) )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:369:3: ( ( '$|' ) (conclusion= expressions ) )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:369:3: ( ( '$|' ) (conclusion= expressions ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==12) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:370:4: ( '$|' ) (conclusion= expressions )
            	    {
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:370:4: ( '$|' )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:370:5: '$|'
            	    {
            	    match(input,12,FOLLOW_12_in_tableauRule1031); if (state.failed) return r0;

            	    }


            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:371:4: (conclusion= expressions )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:371:5: conclusion= expressions
            	    {
            	    pushFollow(FOLLOW_expressions_in_tableauRule1042);
            	    conclusion=expressions();

            	    state._fsp--;
            	    if (state.failed) return r0;

            	    if ( state.backtracking==0 ) {
            	        branches.add(new LinkedHashSet<LukasiewiczExpression>(conclusion));
            	        }

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:379:2: ( ( ( 'priority' ) (t= INT ) )? )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:380:3: ( ( 'priority' ) (t= INT ) )?
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:380:3: ( ( 'priority' ) (t= INT ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==21) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:381:4: ( 'priority' ) (t= INT )
                    {
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:381:4: ( 'priority' )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:381:5: 'priority'
                    {
                    match(input,21,FOLLOW_21_in_tableauRule1075); if (state.failed) return r0;

                    }


                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:382:4: (t= INT )
                    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:382:5: t= INT
                    {
                    t=(Token)match(input,INT,FOLLOW_INT_in_tableauRule1086); if (state.failed) return r0;

                    }


                    if ( state.backtracking==0 ) {
                       priority = Integer.valueOf(t.getText());
                       }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
            r0 = new MettelGeneralTableauRule(new LinkedHashSet<LukasiewiczExpression>(premises),branches,priority);
            }
        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return r0;
    }
    // $ANTLR end "tableauRule"



    // $ANTLR start "tableauCalculus"
    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:392:1: tableauCalculus[Collection<MettelGeneralTableauRule> a0] : ( (e0= tableauRule ) ( ( ( '$;' ) ( (e0= tableauRule )? ) )* ) ( EOF ) ) ;
    public final void tableauCalculus(Collection<MettelGeneralTableauRule> a0) throws RecognitionException {
        MettelGeneralTableauRule e0 =null;


        try {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:394:2: ( ( (e0= tableauRule ) ( ( ( '$;' ) ( (e0= tableauRule )? ) )* ) ( EOF ) ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:395:2: ( (e0= tableauRule ) ( ( ( '$;' ) ( (e0= tableauRule )? ) )* ) ( EOF ) )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:395:2: ( (e0= tableauRule ) ( ( ( '$;' ) ( (e0= tableauRule )? ) )* ) ( EOF ) )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:396:2: (e0= tableauRule ) ( ( ( '$;' ) ( (e0= tableauRule )? ) )* ) ( EOF )
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:396:2: (e0= tableauRule )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:396:3: e0= tableauRule
            {
            pushFollow(FOLLOW_tableauRule_in_tableauCalculus1124);
            e0=tableauRule();

            state._fsp--;
            if (state.failed) return ;

            if ( state.backtracking==0 ) {
              a0.add(e0);
              }

            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:402:2: ( ( ( '$;' ) ( (e0= tableauRule )? ) )* )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:403:3: ( ( '$;' ) ( (e0= tableauRule )? ) )*
            {
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:403:3: ( ( '$;' ) ( (e0= tableauRule )? ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==11) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:404:4: ( '$;' ) ( (e0= tableauRule )? )
            	    {
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:404:4: ( '$;' )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:404:5: '$;'
            	    {
            	    match(input,11,FOLLOW_11_in_tableauCalculus1145); if (state.failed) return ;

            	    }


            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:405:4: ( (e0= tableauRule )? )
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:406:5: (e0= tableauRule )?
            	    {
            	    // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:406:5: (e0= tableauRule )?
            	    int alt17=2;
            	    int LA17_0 = input.LA(1);

            	    if ( (LA17_0==ID||LA17_0==10||LA17_0==14||(LA17_0 >= 17 && LA17_0 <= 20)) ) {
            	        alt17=1;
            	    }
            	    switch (alt17) {
            	        case 1 :
            	            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:406:6: e0= tableauRule
            	            {
            	            pushFollow(FOLLOW_tableauRule_in_tableauCalculus1162);
            	            e0=tableauRule();

            	            state._fsp--;
            	            if (state.failed) return ;

            	            if ( state.backtracking==0 ) {
            	                 a0.add(e0);
            	                 }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            }


            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:415:2: ( EOF )
            // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:415:3: EOF
            {
            match(input,EOF,FOLLOW_EOF_in_tableauCalculus1194); if (state.failed) return ;

            }


            }


            }

        }

        catch (RecognitionException e) {
        reportError(e);
        throw e;
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "tableauCalculus"

    // $ANTLR start synpred1_Lukasiewicz
    public final void synpred1_Lukasiewicz_fragment() throws RecognitionException {
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:313:3: ( valuation )
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:313:4: valuation
        {
        pushFollow(FOLLOW_valuation_in_synpred1_Lukasiewicz859);
        valuation();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_Lukasiewicz

    // $ANTLR start synpred2_Lukasiewicz
    public final void synpred2_Lukasiewicz_fragment() throws RecognitionException {
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:320:3: ( formula )
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:320:4: formula
        {
        pushFollow(FOLLOW_formula_in_synpred2_Lukasiewicz883);
        formula();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_Lukasiewicz

    // $ANTLR start synpred3_Lukasiewicz
    public final void synpred3_Lukasiewicz_fragment() throws RecognitionException {
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:332:3: ( valuation )
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:332:4: valuation
        {
        pushFollow(FOLLOW_valuation_in_synpred3_Lukasiewicz918);
        valuation();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_Lukasiewicz

    // $ANTLR start synpred4_Lukasiewicz
    public final void synpred4_Lukasiewicz_fragment() throws RecognitionException {
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:339:3: ( formula )
        // output/Lukasiewicz/language/Lukasiewicz/Lukasiewicz.g:339:4: formula
        {
        pushFollow(FOLLOW_formula_in_synpred4_Lukasiewicz942);
        formula();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_Lukasiewicz

    // Delegated rules

    public final boolean synpred1_Lukasiewicz() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Lukasiewicz_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_Lukasiewicz() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Lukasiewicz_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_Lukasiewicz() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_Lukasiewicz_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_Lukasiewicz() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Lukasiewicz_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_valuation_in_valuations72 = new BitSet(new long[]{0x00000000001C4020L});
    public static final BitSet FOLLOW_EOF_in_valuations90 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ID_in_valuationVariable114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valuationVariable_in_basic_valuation139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_basic_valuation151 = new BitSet(new long[]{0x00000000001C4020L});
    public static final BitSet FOLLOW_valuation_in_basic_valuation161 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_basic_valuation167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_basic_valuation_in_valuation_true193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_valuation_true212 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_formula_in_valuation_true222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valuation_true_in_valuation_unknown255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_valuation_unknown274 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_formula_in_valuation_unknown284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valuation_unknown_in_valuation_false317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_valuation_false336 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_formula_in_valuation_false346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valuation_false_in_valuation380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formula_in_formulas403 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_EOF_in_formulas421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ID_in_formulaVariable445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formulaVariable_in_basic_formula470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_basic_formula482 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_formula_in_basic_formula492 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_basic_formula498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_basic_formula_in_formula_negation524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_10_in_formula_negation543 = new BitSet(new long[]{0x0000000000004020L});
    public static final BitSet FOLLOW_basic_formula_in_formula_negation553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formula_negation_in_formula_conjunction590 = new BitSet(new long[]{0x0000000000002002L});
    public static final BitSet FOLLOW_13_in_formula_conjunction604 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_formula_negation_in_formula_conjunction615 = new BitSet(new long[]{0x0000000000002002L});
    public static final BitSet FOLLOW_formula_conjunction_in_formula_disjunction661 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_22_in_formula_disjunction675 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_formula_conjunction_in_formula_disjunction686 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_formula_disjunction_in_formula_implication732 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_16_in_formula_implication746 = new BitSet(new long[]{0x0000000000004420L});
    public static final BitSet FOLLOW_formula_disjunction_in_formula_implication757 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_formula_implication_in_formula800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressions827 = new BitSet(new long[]{0x00000000001C4422L});
    public static final BitSet FOLLOW_valuation_in_expression867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formula_in_expression891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valuation_in_expressionEOF926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formula_in_expressionEOF950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EOF_in_expressionEOF965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressions_in_tableauRule996 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_tableauRule1001 = new BitSet(new long[]{0x00000000003C5420L});
    public static final BitSet FOLLOW_expressions_in_tableauRule1010 = new BitSet(new long[]{0x0000000000201002L});
    public static final BitSet FOLLOW_12_in_tableauRule1031 = new BitSet(new long[]{0x00000000003C5420L});
    public static final BitSet FOLLOW_expressions_in_tableauRule1042 = new BitSet(new long[]{0x0000000000201002L});
    public static final BitSet FOLLOW_21_in_tableauRule1075 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_INT_in_tableauRule1086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tableauRule_in_tableauCalculus1124 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_11_in_tableauCalculus1145 = new BitSet(new long[]{0x00000000001E4C20L});
    public static final BitSet FOLLOW_tableauRule_in_tableauCalculus1162 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_EOF_in_tableauCalculus1194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valuation_in_synpred1_Lukasiewicz859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formula_in_synpred2_Lukasiewicz883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valuation_in_synpred3_Lukasiewicz918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formula_in_synpred4_Lukasiewicz942 = new BitSet(new long[]{0x0000000000000002L});

}